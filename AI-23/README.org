#+title: IF AI'23 Module Notes
#+begin_quote
****** [[https://youtu.be/wpV-gGA4PSk][V1.3, last updated April 2023]]
****** /~ Qianyi, 2i1. Have fun./
#+end_quote

-----
* I. Movement, Functions
- *ᴘᴀʀᴀᴍᴇᴛᴇʀ* -- predefined variables within a func^{n}
- *ᴀʀɢᴜᴍᴇɴᴛ* -- inputted values
#+begin_src
to be accurate in loops, reduce power/time
#+end_src
- ~print(objects)~
- ~set(x, y, angle)~
- ~angle()~ -- clockwise from N
- ~go(left, right, time)~
    - magnitude -- /the extent of power/

* II. Variables
*** /Datatypes/
- *ɪɴᴛᴇɢᴇʀ*
- *ꜱᴛʀɪɴɢ* -- 'text type'
- *ʟɪꜱᴛ*
- *ʙᴏᴏʟᴇᴀɴ* -- ~True~ VS ~False~

*** /Arithmetic Operators/
| ~+~ | plus | ~-~ | minus |
| ~*~ | multiply | ~/~ | divide |
| ~**~ | exponent | ~%~ | modulo |

#+begin_src python
x = x + 2   # arithmetic operator
x += 2      # arithmetic assignment operator
#+end_src

*** /Comparison Operators/
| | | ~==~ | equal to?  |
| ~<~ | less than? | ~<=~ | less/equal? |
| ~>~ | more than? | ~>=~ | more/equal? |
#+begin_quote
do NOT confuse: ~=~ *ᴀꜱꜱɪɢɴᴍᴇɴᴛ ᴏᴘᴇʀᴀᴛᴏʀ* VS ~==~ *ᴄᴏᴍᴘᴀʀɪꜱᴏɴ ᴏᴘᴇʀᴀᴛᴏʀ*
#+end_quote

*** /Lists/
- *ʟɪꜱᴛ* are enclosed in ~[]~; commas separate items
- ~list[index]~ -- access element /(index starts from 0)/
- ~list.append(item)~ -- adds to end of list
#+begin_src python
li = [0, 3, True, ['A', 'B']]
li.append(False)
print(li)        # [0, 1, True, ['A', 'B'], False]
print(li[3][1])  # 'B'
#+end_src

* III. Loops
- ~range(start, stop, step)~ -- a num sequence, excludes ~stop~
- ~for i in range(...):~ -- loops 5 times
- ~while A:~ -- loops /while/ A is True
#+begin_src
remember INDENTATION for codes in loops
#+end_src

* IV. Conditionals
#+begin_src python
if x == 0:      # If x is 0
    pass
elif x >= 99:   # If x is not 0, and if x not less than 99
    ...
elif x != 50:   # If aforementioned are False, and if x not equal 50
    ...
else:           # Runs in all False cases
    ...
#+end_src

* V. Sensors & Error
*** /Ultrasound Sensor/
- ~get_ultrasound()[sensor]~ -- includes /some random/ error
- SMALLER value ⇌ CLOSER dist
- use *AVERAGE* of =3= readings -- reduce error
#+begin_src python
def precise_results(i):
    return (get_ultrasound()[i] + get_ultrasound()[i] + get_ultrasound()[i])/3
    
'OR'

def precise_results(i, count = 5):  # the higher the count, the more accurate (but laggier)
    total = 0
    for k in range(count):
        total += get_ultrasound()[i]
    return total/count
#+end_src

- *DIST_{moved} = START - END* ^{~2~} \\
- *DIST_{moved} = END - START* ^{~3~}
[[https://imgur.com/C3RRSEBl.jpg]]

*** /Color Sensor/
#+begin_quote
sensors -- ~0 - 3~ (left to right)
#+end_quote
#+begin_quote
value range -- ~0 - 255~ *(dark to bright)*\\
threshold -- ~128~
#+end_quote
+ =get_color()[sensor][rgb]= -- /rgb:/ red_{~0~}, green_{~1~}, blue_{~2~}
+ =get_intensity()[sensor]= -- average of RGB collected

-----
