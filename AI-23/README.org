#+title: IF AI'23 Modular Notes
#+begin_quote
****** [[https://youtu.be/wpV-gGA4PSk][V1.4, info correct as of Apr 2023]]
****** /~ Qianyi, 2i1. Have fun./
#+end_quote

-----
* I. Movement, Functions
*** /Within Functions/
#+begin_quote
*ᴘᴀʀᴀᴍᴇᴛᴇʀ* -- predefined variables within func^{n} \\
*ᴀʀɢᴜᴍᴇɴᴛ* -- inputted values
#+end_quote
- ~return ...~ -- ends function & offers an end-value
#+begin_src python
def calc_vector(a, b):
    c = (a**2+b**2)**0.5
    return c
print(calc_vector(1, 1))  # 1.41421...
#+end_src python

*** /Impt Functions/
- ~print(...)~
- ~set(x, y, angle)~
- ~angle()~ -- returns float from 0 to 359, clockwise from N
- ~go(left_power, right_power, time)~
- ~abs(num)~ -- returns absolute value
- ~round(float)~ -- rounds a decimal-point value

\\
* II. Variables & Lists
*** /Declaration & Assignment/
#+begin_src python
x = 10     # creates variable
x -= 5     # reassigns
print(x)   # utilises variable
#+end_src python

*** /Datatypes/
- *ɪɴᴛᴇɢᴇʀ*
- *"ꜱᴛʀɪɴɢ"* 
- *[ʟɪꜱᴛ]*
- *ʙᴏᴏʟᴇᴀɴ* -- ~True~ VS ~False~

*** /Arithmetic Operators/
| ~+~ | plus | ~-~ | minus |
| ~*~ | multiply | ~/~ | divide |
| ~**~ | raise power | ~%~ | modulo |
~x = x + 2~ can be shortened to ~x += 2~ /(applies to other operandi)/

*** /Comparison Operators/
| | | ~==~ | equal to?  |
| ~<~ | less than? | ~<=~ | less/equal? |
| ~>~ | more than? | ~>=~ | more/equal? |
#+begin_quote
do NOT confuse: ~=~ *ᴀꜱꜱɪɢɴᴍᴇɴᴛ ᴏᴘᴇʀᴀᴛᴏʀ* VS ~==~ *ᴄᴏᴍᴘᴀʀɪꜱᴏɴ ᴏᴘᴇʀᴀᴛᴏʀ*
#+end_quote

*** /Lists/
- Enclosed in ~[]~ with separating commas
- Index starts from *0* NOT 1.
- ~list[index]~ -- access element given an index
- ~list.append(item)~ -- adds to end of list
#+begin_src python
li = [0, 3, True, ['A', 'B']]
li.append(False)
print(li)        # [0, 1, True, ['A', 'B'], False]
print(li[3][1])  # 'B'
#+end_src

\\
* III. Loops
- ~range(start, stop, step)~ -- a num sequence, excludes ~stop~
#+begin_src python
# the 2 different loops...
for i in range(5):
    pass
while x == 0:   # or any acceptable booleans
    pass
#+end_src
#+begin_quote
- remember INDENTATION for codes in loops
- typically in LOOPS, go() duration and power should be MINIMAL.
#+end_quote

\\
* IV. If-Elif-Else
#+begin_src python
if x == 0:      # If x is 0
    ...
elif x >= 99:   # If x is not 0, and if x not less than 99
    ...
elif x != 50:   # If aforementioned are False, and if x not equal 50
    ...
else:           # Runs in all False cases
    ...
#+end_src

\\
* V. Sensors
*** /Ultrasound Sensor/
- ~get_ultrasound()[sensor]~
- SMALLER value ⇌ CLOSER dist
- to reduce random error, take mean of *multiple* readings
#+begin_src python
def precise_results(i, count = 5):  # the higher the count, the more accurate (but laggier)
    total = 0
    for k in range(count):
        total += get_ultrasound()[i]
    return total/count
#+end_src

- *DIST_{moved} = START - END* ^{~2~} \\
- *DIST_{moved} = END - START* ^{~3~}
[[https://imgur.com/C3RRSEBl.jpg]]

*** /Color Sensor/
#+begin_quote
sensors -- ~0 - 3~ (left to right)
#+end_quote
#+begin_quote
value range -- ~0 - 255~ *(dark to bright)*\\
threshold -- ~128~
#+end_quote
+ =get_color()[sensor][rgb]= -- /rgb:/ red_{~0~}, green_{~1~}, blue_{~2~}
+ =get_intensity()[sensor]= -- average of RGB collected

-----
