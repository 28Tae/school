#+title: IF AI'23 Module Notes
****** [[https://youtu.be/wpV-gGA4PSk][V1.1, last updated 04/04/23]]
-----
* AI Python
** I. Movement, Functions
- *ᴘᴀʀᴀᴍᴇᴛᴇʀ* -- predefined variables within func^{n}
- *ᴀʀɢᴜᴍᴇɴᴛ* -- inputted values
#+begin_src
to be accurate in loops, reduce power/time
#+end_src
- ~print(..., end='\n', sep=' ')~
- ~set(x, y, angle)~
- ~angle()~ -- clockwise from N
- ~go(left, right, time)~
    - magnitude -- /the extent of power/

** II. Variables
*** /Datatypes/
- *ɪɴᴛᴇɢᴇʀ*
- *ꜱᴛʀɪɴɢ* -- 'text type'
- *ʟɪꜱᴛ*
- *ʙᴏᴏʟᴇᴀɴ* -- ~True~ VS ~False~

*** /Arithmetic Operators/
| ~+~ | plus | ~-~ | minus |
| ~*~ | multiply | ~/~ | divide |
| ~**~ | exponent | ~%~ | modulo |

#+begin_src python
x = x + 2   # arithmetic operator
x += 2      # arithmetic assignment operator
#+end_src

*** /Comparison Operators/
| | | ~==~ | equal to?  |
| ~<~ | less than? | ~<=~ | less/equal? |
| ~>~ | more than? | ~>=~ | more/equal? |
#+begin_quote
do NOT confuse: ~=~ *ᴀꜱꜱɪɢɴᴍᴇɴᴛ ᴏᴘᴇʀᴀᴛᴏʀ* VS ~==~ *ᴄᴏᴍᴘᴀʀɪꜱᴏɴ ᴏᴘᴇʀᴀᴛᴏʀ*
#+end_quote

*** /Lists/
- *ʟɪꜱᴛ* are enclosed in ~[]~; commas separate items
- ~list[index]~ -- access element /(index starts from 0)/
- ~list.append(item)~ -- adds to end of list
#+begin_src python
li = [0, 3, True, ['A', 'B']]
li.append(False)
print(li)        # [0, 1, True, ['A', 'B'], False]
print(li[3][1])  # 'B'
#+end_src

** III. Loops
#+begin_quote
- *ɪᴛᴇʀᴀʙʟᴇ* -- an object with countably many items
- ~for i in iterable:~ -- loops thru an iterable *(fixed # of times)*
#+end_quote
- ~range(start, stop, step)~ -- a num sequence, excludes ~stop~
- ~for i in range(...):~ -- loops 5 times
- ~while A:~ -- loops /while/ A is True
#+begin_src
remember to INDENT within loops
#+end_src

** IV. Conditionals
#+begin_src python
if x == 0:      # Only if x is 0
    ...
elif x >= 99:   # If above is False, only if x not less than 99
    ...
elif x != 50:   # If above is False, only if x not equal 50
    ...
else:           # Runs in all fail cases
    ...
#+end_src

** V. Sensors & Error
*** /Ultrasound Sensor/
- ~get_ultrasound()[sensor]~ -- includes /some random/ error
- SMALLER value ⇌ CLOSER dist
- use *AVERAGE* of =3= readings -- reduce error
#+begin_quote
*DIST_{moved} = START - END* ^{~2~} \\
*DIST_{moved} = END - START* ^{~3~}
#+end_quote
[[https://imgur.com/C3RRSEBl.jpg]]

*** /Color Sensor/
#+begin_quote
sensors -- ~0 - 3~ (left to right)
#+end_quote
#+begin_quote
value range -- ~0 - 255~ *(dark to bright)*\\
threshold -- ~128~
#+end_quote
+ =get_color()[sensor][rgb]= -- /rgb:/ red_{~0~}, green_{~1~}, blue_{~2~}
+ =get_intensity()[sensor]= -- /brightness/ / ave RGB reading

*** /Error/
- ᴇʀʀᴏʀ = |ᴠᴀʟᴜᴇ_{*ᴛʀᴜᴇ*} - ᴠᴀʟᴜᴇ_{*ᴍᴇᴀꜱᴜʀᴇᴅ*}|
- ᴀᴠᴇʀᴀɢᴇ ᴇʀʀᴏʀ -- /raw mean of all obtainable errors/
- ʀᴏᴏᴛ ᴍᴇᴀɴ ꜱǫᴜᴀʀᴇ ᴇʀʀᴏʀ -- /the root of the sum of all errors squared/
- *ᴛᴏ ʀᴇᴅᴜᴄᴇ ᴇʀʀᴏʀ*, take ~average~ of several readings
#+begin_src python
def precise_results(i):
    return (get_ultrasound()[i] + get_ultrasound()[i] + get_ultrasound()[i])/3
#+end_src
-----
